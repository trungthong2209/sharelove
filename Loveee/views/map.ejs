<%include header%>  
<script src='https://api.mapbox.com/mapbox-gl-js/v1.12.0/mapbox-gl.js'></script>
<link href='https://api.mapbox.com/mapbox-gl-js/v1.12.0/mapbox-gl.css' rel='stylesheet' />
<title>Sự kiện gần bạn</title>
<body>
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
  <div id='map' style='width: 100%; height: 100%;border-radius: 5px; margin: 0px auto;'></div>
  <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-body">
          <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span
              aria-hidden="true">&times;</span></button>
          <h2 id="marker_title" class=""></h2>
          <img id="marker_image" class="" src="" />
          <p id="marker_latlng" class=""></p>
          <address id="marker_address" class=""></address>
          <p id="marker_content" class=""></p>
        </div>
      </div>
    </div>
  </div>
  <script>
    mapboxgl.accessToken = 'pk.eyJ1IjoidHJ1bmd0aG9uZzIyMDkiLCJhIjoiY2todmh0Z3V6MW1xYzJ4a3plcnFwczNrZSJ9.56LESCjX0r2JxW5KhcXxlA';
    var map = new mapboxgl.Map({
      container: 'map',
      style: 'mapbox://styles/mapbox/streets-v11',
      zoom: 6,
      center: [108.53097049543746, 14.54671315869928]
    });
    async function getStores() {
    
      var res = await fetch('/address/store')
      const data = await res.json();
      var user = await fetch('/api/imageUser')
      const avatar = await user.json();
      const stores = data.data.map(address_1 => {
        return {
          type: 'Feature',
          geometry: {
            type: 'Point',
            coordinates: [
              address_1.location.coordinates[0],
              address_1.location.coordinates[1]
            ]
          },
          properties: {
            purpose: address_1.purpose,
            icon: 'love',
            id: address_1._id
          }
        };
      });

      openTab(stores);
      loadMap(stores, avatar);
    }
    function loadMap(stores, avatar) {
      map.on('load', function () {
        map.loadImage(
          "https://res.cloudinary.com/share-love/image/upload/v1606900436/avatar/Love_Logo_bftnhz.png", function (error, image) {
            if (error) throw error;
           map.loadImage(avatar, function (err, avatar) {
                  if (err) throw err;
            map.addImage('love', image);
            map.addImage('user', avatar);
            map.addSource('point', {
              'type': 'geojson',
              'data': {
                'type': 'FeatureCollection',

                'features': [
                  {
                    'type': 'Feature',
                    'geometry': {
                      'type': 'Point',
                      'coordinates': [0, 0]
                    },

                  }
                ]
              }
            }),
              map.addControl(
                new mapboxgl.GeolocateControl({
                  positionOptions: {
                    enableHighAccuracy: true
                  },
                  trackUserLocation: true
                })
              );
            navigator.geolocation.getCurrentPosition(position => {
              const userCoordinates = [position.coords.longitude, position.coords.latitude];
              map.addSource("user-coordinates", {
                type: "geojson",
                data: {
                  type: "Feature",
                  geometry: {
                    type: "Point",
                    coordinates: userCoordinates
                  }
                }
              });
              map.addLayer({
                id: "user-coordinates",
                source: "user-coordinates",
                type: "symbol", 
                layout: {
                'icon-image': 'user',
                'text-anchor': 'top',
                'icon-size': 0.4,
                
              },   
              });
              map.flyTo({
                center: userCoordinates,
                zoom: 13.5
              });
            })            
            map.addLayer({
              id: 'points',
              type: 'symbol',

              source: {
                type: 'geojson',
                data: {
                  type: 'FeatureCollection',
                  features: stores
                }
              },
              layout: {
                'icon-image': 'love',
                'icon-size': 0.7,
                'text-field': '{purpose}',
                'text-font': ['DIN Offc Pro Medium', 'Arial Unicode MS Bold'],
                'text-offset': [0, 0.9],
                'text-anchor': 'top'

              },
              paint: {
                "text-color": "green"
              }
            });
          });
        })
      })
   
    }
    function openTab(stores) {
        map.on('click', 'points', function (e) {
          
          console.log(e.lngLat.lat.toString().slice(0, 5))
  
          stores.forEach(function (store) {
           if(e.lngLat.lng.toString().slice(0, 6)===store.geometry.coordinates[0].toString().slice(0, 6) 
           && e.lngLat.lat.toString().slice(0, 5)==store.geometry.coordinates[1].toString().slice(0, 5))
           {
            window.open('http://localhost:3000/event/'+store.properties.id);
            }
           else{
            return null;
           }
          });
         });
        map.on('mouseenter', 'points', function () {
            map.getCanvas().style.cursor = 'pointer';
          });
          map.on('mouseleave', 'points', function () {
            map.getCanvas().style.cursor = '';
          });
      }
    getStores();
   
  </script>
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
</body>